/*** AUTOGENERATED FILE - DO NOT EDIT DIRECTLY ***/

(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/* global jQuery */
var initLoader = require('./lib/loaders/clientside');

$(window).one('action:init-templatist', function(e, options) {
    initLoader(options.templatist, options);
});

},{"./lib/loaders/clientside":2}],2:[function(require,module,exports){
"use strict";

/* global jQuery, templates */
var common = require('./common');

module.exports = function(Templatist, options) {
    var loader = function(name, callback) {
        jQuery.ajax({
            url: options.relative_path + '/templates/' + name + '.tpl' + (options.cache_buster ? '?v=' + options.cache_buster : ''),
            type: 'GET',
            success: function(data) {
                callback(null, common.mkRender(data, templates));
            },
            error: function(error) {
                callback(new Error("Unable to load template: " + template + " (" + error.statusText + ")"));
            }
        });
    };

    common.addCommonMethods(loader, templates);

    Templatist.registerLoader('tpl', loader);
};

},{"./common":3}],3:[function(require,module,exports){
"use strict";

module.exports = {
    addCommonMethods: function(loader, templates) {
        loader.registerHelper = function(name, helper) {
            templates.registerHelper(name, helper);
        };

        loader.setGlobal = function(name, value) {
            templates.setGlobal(name, value);
        };
    },

    mkRender: function(template, templates) {
        return function(name, block, data, fn) {
            templates.parse(template, block, data, function(template){ fn(null, template); });
        };
    }
};

},{}]},{},[1]);
